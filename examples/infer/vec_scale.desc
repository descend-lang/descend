fn scale_vec<n: nat>(
    h_vec: &uniq cpu.stack [f32; n]
) -[cpu.thread]-> () {
    let mut gpu = gpu_device(0);
    let mut a_array = gpu_alloc(&uniq gpu, &shrd *h_vec);
    exec::<64, 1024>(
        &uniq gpu,
        <&uniq a_array>,
        | grid: BlockGrp<64, ThreadGrp<1024>>, vec: <&uniq gpu.global [f32; n]> | -[gpu.grid]-> () {
            let groups = group_mut::<1024>(to_view_mut(vec.0));
            for block in grid with g from groups do {
                for block with v from g do {
                    *v = *v * 3.0
                }
            }
        }
    );
    copy_to_host(&shrd a_array, h_vec)
}
